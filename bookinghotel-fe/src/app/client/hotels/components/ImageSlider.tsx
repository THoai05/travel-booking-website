'use client'

import { useState, useEffect, useCallback } from "react"
import Image from "next/image"

// Gi·∫£ s·ª≠ type c·ªßa bro nh∆∞ sau
type ImageType = {
  id: string;
  url: string | any; // 'any' ƒë·ªÉ ch·∫•p nh·∫≠n ·∫£nh import
  alt: string;
}

type ImageSliderProps = {
  images: ImageType[];
  autoPlayInterval?: number;
}

export function ImageSlider({ images, autoPlayInterval = 5000 }: ImageSliderProps) {
  const [imageIndex, setImageIndex] = useState(0)

  // --- üî• PH·∫¶N T·ª∞ ƒê·ªòNG CHUY·ªÇN ·∫¢NH N·∫∞M ·ªû ƒê√ÇY ---

  // 1. D√πng useCallback ƒë·ªÉ h√†m n√†y ·ªïn ƒë·ªãnh
  const showNextImage = useCallback(() => {
    // Check xem c√≥ ·∫£nh kh√¥ng
    if (!images || images.length === 0) return; 
    
    setImageIndex(index => {
      if (index === images.length - 1) return 0
      return index + 1
    })
  }, [images?.length]) // Ph·ª• thu·ªôc v√†o s·ªë l∆∞·ª£ng ·∫£nh

  // 2. D√πng useEffect ƒë·ªÉ set up "c√°i" t·ª± ƒë·ªông ch·∫°y
  useEffect(() => {
    // Kh√¥ng ch·∫°y n·∫øu ch·ªâ c√≥ 1 ·∫£nh ho·∫∑c kh√¥ng c√≥ ·∫£nh
    if (!images || images.length <= 1) return; 

    // T·∫°o m·ªôt interval, n√≥ s·∫Ω g·ªçi h√†m showNextImage
    const interval = setInterval(showNextImage, autoPlayInterval)

    // H√†m d·ªçn d·∫πp (cleanup) ƒë·ªÉ tr√°nh l·ªói memory leak
    return () => clearInterval(interval)
  }, [showNextImage, autoPlayInterval, images]) // Hook ch·∫°y l·∫°i n·∫øu c√°c gi√° tr·ªã n√†y thay ƒë·ªïi

  // --- K·∫æT TH√öC PH·∫¶N T·ª∞ ƒê·ªòNG CHUY·ªÇN ·∫¢NH ---

  return (
    <section
      aria-label="Image Slider"
      className="w-full h-full relative" // 'relative' l√† b·∫Øt bu·ªôc
    >
      <div className="w-full h-full flex overflow-hidden">
        {images?.map(({ id, url, alt }, index) => (

          // 1. DIV n√†y s·∫Ω lo vi·ªác tr∆∞·ª£t (sliding)
          <div
            key={id}
            className="w-full h-full shrink-0 grow-0 relative transition-[translate] duration-300 ease-in-out"
            style={{ translate: `${-100 * imageIndex}%` }}
            aria-hidden={imageIndex !== index}
          >
            {/* 2. Image ch·ªâ lo vi·ªác 'fill' c√°i DIV cha c·ªßa n√≥ */}
            <Image
              src={url}
              alt={alt}
              fill // 'fill' s·∫Ω l√†m ·∫£nh 'position: absolute'
              sizes="(max-width: 768px) 100vw, 100vw"
              className="object-cover" // 'object-cover' ƒë·ªÉ gi·ªØ t·ª∑ l·ªá
              priority={index === 0} // ∆Øu ti√™n load ·∫£nh ƒë·∫ßu ti√™n
            />
          </div>

        ))}
      </div>

      <div id="after-image-slider-controls" />
    </section>
  )
}